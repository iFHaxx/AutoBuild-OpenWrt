name: Build_Arcadyan_AW1000
on:
  repository_dispatch:
  workflow_dispatch:

env:
  REPO_URL: https://github.com/iFHax/lede
  CONFIG_FILE: 'Arcadyan_AW1000.config'
  REPO_BRANCH: master
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Kuala_Lumpur

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Free disk space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: false
        swap-storage: true

    - name: Initialization environment
      id: init
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        set +e
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y update
        sudo -E apt-get -y purge azure-cli  ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -y install $(curl -fsSL https://raw.githubusercontent.com/LeeHe-gif/depend_ubuntu2204_openwrt/refs/heads/main/depend_ubuntu2204_openwrt)
        sudo -E systemctl daemon-reload
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        sudo mkdir -p /workdir
        sudo chown ${USER}:${GROUPS} /workdir
        sudo timedatectl set-timezone "${TZ}"
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Clone source code
      id: codes
      if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        cd openwrt
        echo 'src-git modem https://github.com/FUjr/modem_feeds.git;main' >> feeds.conf.default
        echo 'src-git istore https://github.com/linkease/istore;main' >> feeds.conf.default
        echo 'src-git nas https://github.com/linkease/nas-packages.git;master' >> feeds.conf.default
        echo 'src-git nas_luci https://github.com/linkease/nas-packages-luci.git;main' >> feeds.conf.default

    - name: Free up disk space
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo mkdir -p -m 777 /mnt/openwrt/dl /mnt/openwrt/staging_dir /mnt/openwrt/build_dir
        ln -sf /mnt/openwrt/dl openwrt/dl
        ln -sf /mnt/openwrt/staging_dir openwrt/staging_dir
        ln -sf /mnt/openwrt/build_dir openwrt/build_dir

    - name: Add Quectel-CM 5G package
      working-directory: ./openwrt/package
      run: |
        git clone https://github.com/xx-vv/quectel_cm_5G.git quectel-cm-5g

    - name: Add 3ginfo lite package
      working-directory: ./openwrt/package
      run: |
        git clone https://github.com/4IceG/luci-app-3ginfo-lite.git luci-app-3ginfo-lite

    - name: Manually add new packages to feeds.conf.default
      working-directory: ./openwrt
      run: |
        echo 'src-git quectel-cm-5g https://github.com/xx-vv/quectel_cm_5G.git' >> feeds.conf.default
        echo 'src-git luci-app-3ginfo-lite https://github.com/4IceG/luci-app-3ginfo-lite.git' >> feeds.conf.default

    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a -f -p modem
        ./scripts/feeds install -a -p nas
        ./scripts/feeds install -a -p nas_luci
        ./scripts/feeds install -a -f -p quectel-cm-5g
        ./scripts/feeds install -a -p luci-app-3ginfo-lite

    - name: Configuration Customization - Build_Arcadyan_AW1000
      run: |
        chmod +x ./customize.sh && ./customize.sh
        [[ -d "files" ]] && mv -f files openwrt/files
        [[ -e "${CONFIG_FILE}" ]] && cp -f ${CONFIG_FILE} openwrt/.config
        cd openwrt && make defconfig

    - name: Download package
      id: package
      run: |
        cd openwrt/
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the OpenWrt
      id: compile
      run: |
        cd openwrt/
        echo -e "$(nproc) thread compile"
        make -j$(nproc)
        echo "status=success" >> ${GITHUB_OUTPUT}
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && steps.compile.outputs.status == 'success'
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && steps.organize.outputs.status == 'success'
      run: |
          echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
          touch release.txt
          echo -e "OpenWRT firmware for Arcadyan_AW1000 EN" >> release.txt
          echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: LeeHe-gif/delete-workflow-runs@main
      with:
        retain_days: 1
        keep_minimum_runs: 3
        token: ${{ secrets.GITHUB_TOKEN }}
